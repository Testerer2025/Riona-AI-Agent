import { runAgent } from ".";
import logger from "../config/logger";

// Initialisiere Google AI
const genAI = new GoogleGenerativeAI(process.env.GOOGLE_AI_API_KEY || "");

// Post-Prompts f√ºr verschiedene Inhalte
const postPrompts = [
    "Erstelle einen lustigen, familienfreundlichen Witz √ºber den Alltag auf Deutsch.",
    "Schreibe einen motivierenden Post √ºber pers√∂nliches Wachstum auf Deutsch.",
    "Erstelle einen humorvollen Post √ºber gesunde Ern√§hrung und Brokkoli auf Deutsch.",
    "Schreibe einen witzigen Post √ºber Work-Life-Balance auf Deutsch.",
    "Erstelle einen Post √ºber Dankbarkeit und positive Gedanken auf Deutsch.",
    "Schreibe einen lustigen Post √ºber Technologie im Alltag auf Deutsch.",
    "Erstelle einen inspirierenden Post √ºber Freundschaft auf Deutsch.",
    "Schreibe einen humorvollen Post √ºber kleine Freuden des Lebens auf Deutsch."
];

export async function generateJoke(): Promise<string> {
    try {
        // Zuf√§lligen Prompt ausw√§hlen
        const randomPrompt = postPrompts[Math.floor(Math.random() * postPrompts.length)];
        
        const fullPrompt = `${randomPrompt}

Erstelle einen ansprechenden Instagram-Post mit:
- Einem fesselnden Haupttext (max. 150 W√∂rter) 
- Authentischem, menschlichem Ton
- Auf Deutsch
- Familienfreundlich
- Ohne Emojis im Haupttext (nur am Ende erlaubt)
- Mit 3-5 relevanten Hashtags am Ende

Format: 
[Haupttext]

[Hashtags]

Wichtig: Antworte nur mit dem Post-Text, keine zus√§tzlichen Erkl√§rungen.`;

        // Verwende runAgent ohne Schema (wie urspr√ºnglich)
        const data = await runAgent(null as any, fullPrompt);
        
        // Erweiterte Datenformat-Erkennung
        if (Array.isArray(data)) {
            if (data[0]?.witz) return data[0].witz;
            if (data[0]?.instagram_post) return data[0].instagram_post;
            if (data[0]?.joke) return data[0].joke;
            if (data[0]?.content) return data[0].content;
            if (data[0]?.post) return data[0].post;
        }
        
        if (typeof data === "object" && data !== null) {
            if (data.witz) return String(data.witz);
            if (data.instagram_post) return String(data.instagram_post);
            if (data.joke) return String(data.joke);
            if (data.content) return String(data.content);
            if (data.post) return String(data.post);
        }
        
        // Fallback - direkter String oder JSON parsen
        if (typeof data === "string") {
            try {
                const parsed = JSON.parse(data);
                if (Array.isArray(parsed) && parsed[0]?.witz) {
                    return parsed[0].witz;
                }
                if (Array.isArray(parsed) && parsed[0]?.instagram_post) {
                    return parsed[0].instagram_post;
                }
                if (parsed?.witz) return parsed.witz;
                if (parsed?.instagram_post) return parsed.instagram_post;
                return data;
            } catch {
                return data;
            }
        }

        // Letzter Fallback
        logger.warn("Unerwartetes Datenformat:", JSON.stringify(data));
        return getFallbackPost();
        
    } catch (error) {
        logger.error("Fehler bei generateJoke:", error);
        return getFallbackPost();
    }
}

// Alternative: Verwende runAgent falls vorhanden
export async function generateJokeWithSchema(): Promise<string> {
    try {
        // Importiere runAgent dynamisch
        const { runAgent } = await import("./index");
        
        const prompt = `Erstelle einen ansprechenden Instagram-Post auf Deutsch:
        - Lustig, inspirierend oder motivierend
        - Familienfreundlich und authentisch
        - Maximal 150 W√∂rter Haupttext
        - 3-5 deutsche Hashtags am Ende
        - Kein Spam oder oberfl√§chlicher Inhalt`;

        const schema = getJokeSchema();
        const result = await runAgent(schema, prompt);
        
        if (result && result[0] && result[0].witz) {
            logger.info("Post mit Schema erfolgreich generiert");
            return result[0].witz;
        } else {
            logger.warn("Schema-basierte Generierung fehlgeschlagen");
            return getFallbackPost();
        }
        
    } catch (error) {
        logger.error("Fehler bei Schema-basierter Generierung:", error);
        // Fallback zur direkten Google AI Methode
        return generateJoke();
    }
}

// Fallback Posts
function getFallbackPost(): string {
    const fallbackPosts = [
        `Heute ist ein guter Tag, um dankbar zu sein! üåü

Was hat euch heute zum L√§cheln gebracht?

#dankbarkeit #positivevibes #gutestimmung #achtsamkeit #lebensfreude`,

        `Kleine Erinnerung: Du machst das gro√üartig! üí™

Manchmal vergessen wir, wie weit wir schon gekommen sind. Seid stolz auf euch!

#motivation #selbstliebe #pers√∂nlichkesentwicklung #st√§rke #weitermachen`,

        `Fun Fact: Brokkoli ist eigentlich ein Superheld in Gem√ºse-Form! ü•¶

Wer h√§tte gedacht, dass etwas so Gesundes auch so lecker sein kann?

#gesundessen #brokkoli #superheld #ern√§hrung #gesundleben`,

        `Das Leben ist wie ein guter Kaffee - manchmal bitter, aber immer besser mit Freunden! ‚òï

Mit wem trinkt ihr heute euren Kaffee?

#freundschaft #kaffee #zusammen #lebensweisheit #gemeinsam`,

        `L√§cheln ist ansteckend - verbreitet heute ein bisschen Freude! üòä

Habt ihr heute schon jemandem ein L√§cheln geschenkt?

#l√§cheln #freude #positivity #menschlichkeit #gutf√ºhlen`,

        `Neue Woche, neue M√∂glichkeiten! üöÄ

Was ist euer Ziel f√ºr diese Woche?

#montagsmotivation #neuewoche #ziele #chancen #positiv`
    ];
    
    const selectedPost = fallbackPosts[Math.floor(Math.random() * fallbackPosts.length)];
    logger.info("Fallback-Post ausgew√§hlt");
    return selectedPost;
}
